// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: agent_server.proto

#ifndef PROTOBUF_INCLUDED_agent_5fserver_2eproto
#define PROTOBUF_INCLUDED_agent_5fserver_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "environment.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_agent_5fserver_2eproto 

namespace protobuf_agent_5fserver_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[6];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_agent_5fserver_2eproto
namespace agent_server {
namespace service {
class CreateAgentRequest;
class CreateAgentRequestDefaultTypeInternal;
extern CreateAgentRequestDefaultTypeInternal _CreateAgentRequest_default_instance_;
class CreateAgentResponse;
class CreateAgentResponseDefaultTypeInternal;
extern CreateAgentResponseDefaultTypeInternal _CreateAgentResponse_default_instance_;
class CreateEnvironmentRequest;
class CreateEnvironmentRequestDefaultTypeInternal;
extern CreateEnvironmentRequestDefaultTypeInternal _CreateEnvironmentRequest_default_instance_;
class CreateEnvironmentResponse;
class CreateEnvironmentResponseDefaultTypeInternal;
extern CreateEnvironmentResponseDefaultTypeInternal _CreateEnvironmentResponse_default_instance_;
class GetEnvironmentRequest;
class GetEnvironmentRequestDefaultTypeInternal;
extern GetEnvironmentRequestDefaultTypeInternal _GetEnvironmentRequest_default_instance_;
class GetEnvironmentResponse;
class GetEnvironmentResponseDefaultTypeInternal;
extern GetEnvironmentResponseDefaultTypeInternal _GetEnvironmentResponse_default_instance_;
}  // namespace service
}  // namespace agent_server
namespace google {
namespace protobuf {
template<> ::agent_server::service::CreateAgentRequest* Arena::CreateMaybeMessage<::agent_server::service::CreateAgentRequest>(Arena*);
template<> ::agent_server::service::CreateAgentResponse* Arena::CreateMaybeMessage<::agent_server::service::CreateAgentResponse>(Arena*);
template<> ::agent_server::service::CreateEnvironmentRequest* Arena::CreateMaybeMessage<::agent_server::service::CreateEnvironmentRequest>(Arena*);
template<> ::agent_server::service::CreateEnvironmentResponse* Arena::CreateMaybeMessage<::agent_server::service::CreateEnvironmentResponse>(Arena*);
template<> ::agent_server::service::GetEnvironmentRequest* Arena::CreateMaybeMessage<::agent_server::service::GetEnvironmentRequest>(Arena*);
template<> ::agent_server::service::GetEnvironmentResponse* Arena::CreateMaybeMessage<::agent_server::service::GetEnvironmentResponse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace agent_server {
namespace service {

// ===================================================================

class CreateEnvironmentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.CreateEnvironmentRequest) */ {
 public:
  CreateEnvironmentRequest();
  virtual ~CreateEnvironmentRequest();

  CreateEnvironmentRequest(const CreateEnvironmentRequest& from);

  inline CreateEnvironmentRequest& operator=(const CreateEnvironmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateEnvironmentRequest(CreateEnvironmentRequest&& from) noexcept
    : CreateEnvironmentRequest() {
    *this = ::std::move(from);
  }

  inline CreateEnvironmentRequest& operator=(CreateEnvironmentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEnvironmentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateEnvironmentRequest* internal_default_instance() {
    return reinterpret_cast<const CreateEnvironmentRequest*>(
               &_CreateEnvironmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(CreateEnvironmentRequest* other);
  friend void swap(CreateEnvironmentRequest& a, CreateEnvironmentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateEnvironmentRequest* New() const final {
    return CreateMaybeMessage<CreateEnvironmentRequest>(NULL);
  }

  CreateEnvironmentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateEnvironmentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateEnvironmentRequest& from);
  void MergeFrom(const CreateEnvironmentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateEnvironmentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // .data_format.Config config = 2;
  bool has_config() const;
  void clear_config();
  static const int kConfigFieldNumber = 2;
  private:
  const ::data_format::Config& _internal_config() const;
  public:
  const ::data_format::Config& config() const;
  ::data_format::Config* release_config();
  ::data_format::Config* mutable_config();
  void set_allocated_config(::data_format::Config* config);

  // .data_format.Terrain terrain = 4;
  bool has_terrain() const;
  void clear_terrain();
  static const int kTerrainFieldNumber = 4;
  private:
  const ::data_format::Terrain& _internal_terrain() const;
  public:
  const ::data_format::Terrain& terrain() const;
  ::data_format::Terrain* release_terrain();
  ::data_format::Terrain* mutable_terrain();
  void set_allocated_terrain(::data_format::Terrain* terrain);

  // fixed64 timestamp_epoch_count = 3;
  void clear_timestamp_epoch_count();
  static const int kTimestampEpochCountFieldNumber = 3;
  ::google::protobuf::uint64 timestamp_epoch_count() const;
  void set_timestamp_epoch_count(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:agent_server.service.CreateEnvironmentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::data_format::Config* config_;
  ::data_format::Terrain* terrain_;
  ::google::protobuf::uint64 timestamp_epoch_count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateEnvironmentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.CreateEnvironmentResponse) */ {
 public:
  CreateEnvironmentResponse();
  virtual ~CreateEnvironmentResponse();

  CreateEnvironmentResponse(const CreateEnvironmentResponse& from);

  inline CreateEnvironmentResponse& operator=(const CreateEnvironmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateEnvironmentResponse(CreateEnvironmentResponse&& from) noexcept
    : CreateEnvironmentResponse() {
    *this = ::std::move(from);
  }

  inline CreateEnvironmentResponse& operator=(CreateEnvironmentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateEnvironmentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateEnvironmentResponse* internal_default_instance() {
    return reinterpret_cast<const CreateEnvironmentResponse*>(
               &_CreateEnvironmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(CreateEnvironmentResponse* other);
  friend void swap(CreateEnvironmentResponse& a, CreateEnvironmentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateEnvironmentResponse* New() const final {
    return CreateMaybeMessage<CreateEnvironmentResponse>(NULL);
  }

  CreateEnvironmentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateEnvironmentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateEnvironmentResponse& from);
  void MergeFrom(const CreateEnvironmentResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateEnvironmentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:agent_server.service.CreateEnvironmentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAgentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.CreateAgentRequest) */ {
 public:
  CreateAgentRequest();
  virtual ~CreateAgentRequest();

  CreateAgentRequest(const CreateAgentRequest& from);

  inline CreateAgentRequest& operator=(const CreateAgentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAgentRequest(CreateAgentRequest&& from) noexcept
    : CreateAgentRequest() {
    *this = ::std::move(from);
  }

  inline CreateAgentRequest& operator=(CreateAgentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAgentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAgentRequest* internal_default_instance() {
    return reinterpret_cast<const CreateAgentRequest*>(
               &_CreateAgentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(CreateAgentRequest* other);
  friend void swap(CreateAgentRequest& a, CreateAgentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAgentRequest* New() const final {
    return CreateMaybeMessage<CreateAgentRequest>(NULL);
  }

  CreateAgentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAgentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAgentRequest& from);
  void MergeFrom(const CreateAgentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAgentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string agent_name = 1;
  void clear_agent_name();
  static const int kAgentNameFieldNumber = 1;
  const ::std::string& agent_name() const;
  void set_agent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_agent_name(::std::string&& value);
  #endif
  void set_agent_name(const char* value);
  void set_agent_name(const char* value, size_t size);
  ::std::string* mutable_agent_name();
  ::std::string* release_agent_name();
  void set_allocated_agent_name(::std::string* agent_name);

  // string environment_name = 2;
  void clear_environment_name();
  static const int kEnvironmentNameFieldNumber = 2;
  const ::std::string& environment_name() const;
  void set_environment_name(const ::std::string& value);
  #if LANG_CXX11
  void set_environment_name(::std::string&& value);
  #endif
  void set_environment_name(const char* value);
  void set_environment_name(const char* value, size_t size);
  ::std::string* mutable_environment_name();
  ::std::string* release_environment_name();
  void set_allocated_environment_name(::std::string* environment_name);

  // @@protoc_insertion_point(class_scope:agent_server.service.CreateAgentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr agent_name_;
  ::google::protobuf::internal::ArenaStringPtr environment_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class CreateAgentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.CreateAgentResponse) */ {
 public:
  CreateAgentResponse();
  virtual ~CreateAgentResponse();

  CreateAgentResponse(const CreateAgentResponse& from);

  inline CreateAgentResponse& operator=(const CreateAgentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  CreateAgentResponse(CreateAgentResponse&& from) noexcept
    : CreateAgentResponse() {
    *this = ::std::move(from);
  }

  inline CreateAgentResponse& operator=(CreateAgentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const CreateAgentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CreateAgentResponse* internal_default_instance() {
    return reinterpret_cast<const CreateAgentResponse*>(
               &_CreateAgentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(CreateAgentResponse* other);
  friend void swap(CreateAgentResponse& a, CreateAgentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline CreateAgentResponse* New() const final {
    return CreateMaybeMessage<CreateAgentResponse>(NULL);
  }

  CreateAgentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<CreateAgentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const CreateAgentResponse& from);
  void MergeFrom(const CreateAgentResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CreateAgentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:agent_server.service.CreateAgentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetEnvironmentRequest : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.GetEnvironmentRequest) */ {
 public:
  GetEnvironmentRequest();
  virtual ~GetEnvironmentRequest();

  GetEnvironmentRequest(const GetEnvironmentRequest& from);

  inline GetEnvironmentRequest& operator=(const GetEnvironmentRequest& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetEnvironmentRequest(GetEnvironmentRequest&& from) noexcept
    : GetEnvironmentRequest() {
    *this = ::std::move(from);
  }

  inline GetEnvironmentRequest& operator=(GetEnvironmentRequest&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnvironmentRequest& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnvironmentRequest* internal_default_instance() {
    return reinterpret_cast<const GetEnvironmentRequest*>(
               &_GetEnvironmentRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(GetEnvironmentRequest* other);
  friend void swap(GetEnvironmentRequest& a, GetEnvironmentRequest& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetEnvironmentRequest* New() const final {
    return CreateMaybeMessage<GetEnvironmentRequest>(NULL);
  }

  GetEnvironmentRequest* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetEnvironmentRequest>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetEnvironmentRequest& from);
  void MergeFrom(const GetEnvironmentRequest& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnvironmentRequest* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:agent_server.service.GetEnvironmentRequest)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GetEnvironmentResponse : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:agent_server.service.GetEnvironmentResponse) */ {
 public:
  GetEnvironmentResponse();
  virtual ~GetEnvironmentResponse();

  GetEnvironmentResponse(const GetEnvironmentResponse& from);

  inline GetEnvironmentResponse& operator=(const GetEnvironmentResponse& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  GetEnvironmentResponse(GetEnvironmentResponse&& from) noexcept
    : GetEnvironmentResponse() {
    *this = ::std::move(from);
  }

  inline GetEnvironmentResponse& operator=(GetEnvironmentResponse&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const GetEnvironmentResponse& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const GetEnvironmentResponse* internal_default_instance() {
    return reinterpret_cast<const GetEnvironmentResponse*>(
               &_GetEnvironmentResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(GetEnvironmentResponse* other);
  friend void swap(GetEnvironmentResponse& a, GetEnvironmentResponse& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline GetEnvironmentResponse* New() const final {
    return CreateMaybeMessage<GetEnvironmentResponse>(NULL);
  }

  GetEnvironmentResponse* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<GetEnvironmentResponse>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const GetEnvironmentResponse& from);
  void MergeFrom(const GetEnvironmentResponse& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(GetEnvironmentResponse* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .data_format.Environment environment = 1;
  bool has_environment() const;
  void clear_environment();
  static const int kEnvironmentFieldNumber = 1;
  private:
  const ::data_format::Environment& _internal_environment() const;
  public:
  const ::data_format::Environment& environment() const;
  ::data_format::Environment* release_environment();
  ::data_format::Environment* mutable_environment();
  void set_allocated_environment(::data_format::Environment* environment);

  // @@protoc_insertion_point(class_scope:agent_server.service.GetEnvironmentResponse)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::data_format::Environment* environment_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_agent_5fserver_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CreateEnvironmentRequest

// string name = 1;
inline void CreateEnvironmentRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateEnvironmentRequest::name() const {
  // @@protoc_insertion_point(field_get:agent_server.service.CreateEnvironmentRequest.name)
  return name_.GetNoArena();
}
inline void CreateEnvironmentRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent_server.service.CreateEnvironmentRequest.name)
}
#if LANG_CXX11
inline void CreateEnvironmentRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent_server.service.CreateEnvironmentRequest.name)
}
#endif
inline void CreateEnvironmentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent_server.service.CreateEnvironmentRequest.name)
}
inline void CreateEnvironmentRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent_server.service.CreateEnvironmentRequest.name)
}
inline ::std::string* CreateEnvironmentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:agent_server.service.CreateEnvironmentRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateEnvironmentRequest::release_name() {
  // @@protoc_insertion_point(field_release:agent_server.service.CreateEnvironmentRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateEnvironmentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.CreateEnvironmentRequest.name)
}

// .data_format.Config config = 2;
inline bool CreateEnvironmentRequest::has_config() const {
  return this != internal_default_instance() && config_ != NULL;
}
inline const ::data_format::Config& CreateEnvironmentRequest::_internal_config() const {
  return *config_;
}
inline const ::data_format::Config& CreateEnvironmentRequest::config() const {
  const ::data_format::Config* p = config_;
  // @@protoc_insertion_point(field_get:agent_server.service.CreateEnvironmentRequest.config)
  return p != NULL ? *p : *reinterpret_cast<const ::data_format::Config*>(
      &::data_format::_Config_default_instance_);
}
inline ::data_format::Config* CreateEnvironmentRequest::release_config() {
  // @@protoc_insertion_point(field_release:agent_server.service.CreateEnvironmentRequest.config)
  
  ::data_format::Config* temp = config_;
  config_ = NULL;
  return temp;
}
inline ::data_format::Config* CreateEnvironmentRequest::mutable_config() {
  
  if (config_ == NULL) {
    auto* p = CreateMaybeMessage<::data_format::Config>(GetArenaNoVirtual());
    config_ = p;
  }
  // @@protoc_insertion_point(field_mutable:agent_server.service.CreateEnvironmentRequest.config)
  return config_;
}
inline void CreateEnvironmentRequest::set_allocated_config(::data_format::Config* config) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(config_);
  }
  if (config) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      config = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, config, submessage_arena);
    }
    
  } else {
    
  }
  config_ = config;
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.CreateEnvironmentRequest.config)
}

// fixed64 timestamp_epoch_count = 3;
inline void CreateEnvironmentRequest::clear_timestamp_epoch_count() {
  timestamp_epoch_count_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 CreateEnvironmentRequest::timestamp_epoch_count() const {
  // @@protoc_insertion_point(field_get:agent_server.service.CreateEnvironmentRequest.timestamp_epoch_count)
  return timestamp_epoch_count_;
}
inline void CreateEnvironmentRequest::set_timestamp_epoch_count(::google::protobuf::uint64 value) {
  
  timestamp_epoch_count_ = value;
  // @@protoc_insertion_point(field_set:agent_server.service.CreateEnvironmentRequest.timestamp_epoch_count)
}

// .data_format.Terrain terrain = 4;
inline bool CreateEnvironmentRequest::has_terrain() const {
  return this != internal_default_instance() && terrain_ != NULL;
}
inline const ::data_format::Terrain& CreateEnvironmentRequest::_internal_terrain() const {
  return *terrain_;
}
inline const ::data_format::Terrain& CreateEnvironmentRequest::terrain() const {
  const ::data_format::Terrain* p = terrain_;
  // @@protoc_insertion_point(field_get:agent_server.service.CreateEnvironmentRequest.terrain)
  return p != NULL ? *p : *reinterpret_cast<const ::data_format::Terrain*>(
      &::data_format::_Terrain_default_instance_);
}
inline ::data_format::Terrain* CreateEnvironmentRequest::release_terrain() {
  // @@protoc_insertion_point(field_release:agent_server.service.CreateEnvironmentRequest.terrain)
  
  ::data_format::Terrain* temp = terrain_;
  terrain_ = NULL;
  return temp;
}
inline ::data_format::Terrain* CreateEnvironmentRequest::mutable_terrain() {
  
  if (terrain_ == NULL) {
    auto* p = CreateMaybeMessage<::data_format::Terrain>(GetArenaNoVirtual());
    terrain_ = p;
  }
  // @@protoc_insertion_point(field_mutable:agent_server.service.CreateEnvironmentRequest.terrain)
  return terrain_;
}
inline void CreateEnvironmentRequest::set_allocated_terrain(::data_format::Terrain* terrain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(terrain_);
  }
  if (terrain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      terrain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, terrain, submessage_arena);
    }
    
  } else {
    
  }
  terrain_ = terrain;
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.CreateEnvironmentRequest.terrain)
}

// -------------------------------------------------------------------

// CreateEnvironmentResponse

// -------------------------------------------------------------------

// CreateAgentRequest

// string agent_name = 1;
inline void CreateAgentRequest::clear_agent_name() {
  agent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAgentRequest::agent_name() const {
  // @@protoc_insertion_point(field_get:agent_server.service.CreateAgentRequest.agent_name)
  return agent_name_.GetNoArena();
}
inline void CreateAgentRequest::set_agent_name(const ::std::string& value) {
  
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent_server.service.CreateAgentRequest.agent_name)
}
#if LANG_CXX11
inline void CreateAgentRequest::set_agent_name(::std::string&& value) {
  
  agent_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent_server.service.CreateAgentRequest.agent_name)
}
#endif
inline void CreateAgentRequest::set_agent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent_server.service.CreateAgentRequest.agent_name)
}
inline void CreateAgentRequest::set_agent_name(const char* value, size_t size) {
  
  agent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent_server.service.CreateAgentRequest.agent_name)
}
inline ::std::string* CreateAgentRequest::mutable_agent_name() {
  
  // @@protoc_insertion_point(field_mutable:agent_server.service.CreateAgentRequest.agent_name)
  return agent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAgentRequest::release_agent_name() {
  // @@protoc_insertion_point(field_release:agent_server.service.CreateAgentRequest.agent_name)
  
  return agent_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAgentRequest::set_allocated_agent_name(::std::string* agent_name) {
  if (agent_name != NULL) {
    
  } else {
    
  }
  agent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), agent_name);
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.CreateAgentRequest.agent_name)
}

// string environment_name = 2;
inline void CreateAgentRequest::clear_environment_name() {
  environment_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& CreateAgentRequest::environment_name() const {
  // @@protoc_insertion_point(field_get:agent_server.service.CreateAgentRequest.environment_name)
  return environment_name_.GetNoArena();
}
inline void CreateAgentRequest::set_environment_name(const ::std::string& value) {
  
  environment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent_server.service.CreateAgentRequest.environment_name)
}
#if LANG_CXX11
inline void CreateAgentRequest::set_environment_name(::std::string&& value) {
  
  environment_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent_server.service.CreateAgentRequest.environment_name)
}
#endif
inline void CreateAgentRequest::set_environment_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  environment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent_server.service.CreateAgentRequest.environment_name)
}
inline void CreateAgentRequest::set_environment_name(const char* value, size_t size) {
  
  environment_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent_server.service.CreateAgentRequest.environment_name)
}
inline ::std::string* CreateAgentRequest::mutable_environment_name() {
  
  // @@protoc_insertion_point(field_mutable:agent_server.service.CreateAgentRequest.environment_name)
  return environment_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CreateAgentRequest::release_environment_name() {
  // @@protoc_insertion_point(field_release:agent_server.service.CreateAgentRequest.environment_name)
  
  return environment_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CreateAgentRequest::set_allocated_environment_name(::std::string* environment_name) {
  if (environment_name != NULL) {
    
  } else {
    
  }
  environment_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), environment_name);
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.CreateAgentRequest.environment_name)
}

// -------------------------------------------------------------------

// CreateAgentResponse

// -------------------------------------------------------------------

// GetEnvironmentRequest

// string name = 1;
inline void GetEnvironmentRequest::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& GetEnvironmentRequest::name() const {
  // @@protoc_insertion_point(field_get:agent_server.service.GetEnvironmentRequest.name)
  return name_.GetNoArena();
}
inline void GetEnvironmentRequest::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:agent_server.service.GetEnvironmentRequest.name)
}
#if LANG_CXX11
inline void GetEnvironmentRequest::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:agent_server.service.GetEnvironmentRequest.name)
}
#endif
inline void GetEnvironmentRequest::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:agent_server.service.GetEnvironmentRequest.name)
}
inline void GetEnvironmentRequest::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:agent_server.service.GetEnvironmentRequest.name)
}
inline ::std::string* GetEnvironmentRequest::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:agent_server.service.GetEnvironmentRequest.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* GetEnvironmentRequest::release_name() {
  // @@protoc_insertion_point(field_release:agent_server.service.GetEnvironmentRequest.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void GetEnvironmentRequest::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.GetEnvironmentRequest.name)
}

// -------------------------------------------------------------------

// GetEnvironmentResponse

// .data_format.Environment environment = 1;
inline bool GetEnvironmentResponse::has_environment() const {
  return this != internal_default_instance() && environment_ != NULL;
}
inline const ::data_format::Environment& GetEnvironmentResponse::_internal_environment() const {
  return *environment_;
}
inline const ::data_format::Environment& GetEnvironmentResponse::environment() const {
  const ::data_format::Environment* p = environment_;
  // @@protoc_insertion_point(field_get:agent_server.service.GetEnvironmentResponse.environment)
  return p != NULL ? *p : *reinterpret_cast<const ::data_format::Environment*>(
      &::data_format::_Environment_default_instance_);
}
inline ::data_format::Environment* GetEnvironmentResponse::release_environment() {
  // @@protoc_insertion_point(field_release:agent_server.service.GetEnvironmentResponse.environment)
  
  ::data_format::Environment* temp = environment_;
  environment_ = NULL;
  return temp;
}
inline ::data_format::Environment* GetEnvironmentResponse::mutable_environment() {
  
  if (environment_ == NULL) {
    auto* p = CreateMaybeMessage<::data_format::Environment>(GetArenaNoVirtual());
    environment_ = p;
  }
  // @@protoc_insertion_point(field_mutable:agent_server.service.GetEnvironmentResponse.environment)
  return environment_;
}
inline void GetEnvironmentResponse::set_allocated_environment(::data_format::Environment* environment) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(environment_);
  }
  if (environment) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      environment = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, environment, submessage_arena);
    }
    
  } else {
    
  }
  environment_ = environment;
  // @@protoc_insertion_point(field_set_allocated:agent_server.service.GetEnvironmentResponse.environment)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace service
}  // namespace agent_server

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_agent_5fserver_2eproto
